import{_ as o,c as t,e as a,o as r}from"./app-CmwWwVtm.js";const s={};function i(n,e){return r(),t("div",null,e[0]||(e[0]=[a('<p>root管理器是手机里的 一个<em>app</em></p><h2 id="root管理器能干啥" tabindex="-1"><a class="header-anchor" href="#root管理器能干啥"><span>root管理器能干啥？</span></a></h2><p>root用户的权限非常高，只能让信任的 <em>app</em> 使用。 <s>如果 <em>pdd</em> 获取到了你的root权限恐怕会把<strong>砍一刀</strong>给每个微信好友发个遍。</s> 所以需要各个 <em>app</em> 分别管理，如果有 <em>app</em> 想要申请 root权限 可以手动同意或拒绝。</p><h2 id="最流行的root管理器" tabindex="-1"><a class="header-anchor" href="#最流行的root管理器"><span>最流行的root管理器</span></a></h2><p>不要一上来就搞花里胡哨的，就从<strong>最广泛</strong>的 root管理器 开始，完整经历一个机佬的所有过程。</p><h2 id="magisk" tabindex="-1"><a class="header-anchor" href="#magisk"><span>magisk</span></a></h2><p><em>Magisk</em> 是一个非常流行且灵活的 <em>Android</em> root 解决方案：</p><ol><li><strong>不修改 system 分区</strong>：Magisk 通过修改 boot.img 文件的方式来实现 root，而不是直接修改 <em>system</em> 分区。这使得在设备启动时，<em>Magisk</em> 可以加载修改过的镜像，从而保持原始系统的完整性。</li><li><strong>Systemless 机制</strong>：保持系统分区完整性的同时达到修改系统分区的效果，从而避免了很多常见的兼容性和安全性问题。此外，这也使得用户可以更容易地进行 <em>OTA</em> 更新，因为系统更新通常不会影响 <em>Magisk</em>。</li><li><strong>权限管理</strong>：<em>Magisk</em> 不仅允许用户控制哪些应用可以获取 root 权限，还可以对权限进行临时授予或撤回，增强了安全性。用户还可以查看日志和管理模块，进一步自定义设备的功能。</li></ol><p>Magisk 还支持模块化功能，用户可以通过安装不同的模块来扩展系统功能，而这些模块同样不会影响原始系统。整体而言，<em>Magisk</em> 提供了一个灵活且安全的 Root</p><h2 id="其他-root管理器" tabindex="-1"><a class="header-anchor" href="#其他-root管理器"><span>其他 root管理器</span></a></h2><p>这部分内容请一个月后再来看，没有明确需求也不用更换其他root管理器。</p><h3 id="kitsune-mask-magisk-δ" tabindex="-1"><a class="header-anchor" href="#kitsune-mask-magisk-δ"><span><a href="jesse205.github.io/MagiskChineseDocument/delta">Kitsune Mask</a> / magisk Δ</span></a></h3><p>自带隐藏root的能力。兼容 <em>magisk</em> 的模块。</p><h3 id="kernelsu" tabindex="-1"><a class="header-anchor" href="#kernelsu"><span><a href="kernelsu.org/zh_CN">kernelSU</a></span></a></h3><p>基本兼容 <em>magisk</em> 的模块。 内核级 root 的实现，甚至不用 <strong>主动</strong>隐藏 root ，默认隐藏。 表现为以下形式：</p><ul><li><em>magisk</em> ： <em>app</em> 检测到root，请求root，然后用户能选择 同意 或 拒绝 。</li><li><em>kernelSU</em> ： 对所有 <em>app</em> 默认不显露root，不在 <em>kernelSU</em> 面板中勾选，则 <em>app</em> 很难检测到 root ，会认为当前系统没有被 root 。只有用户选中的 <em>app</em> 能检测到 root 并使用 root 权限。</li></ul><p><em>Magisk</em> 的授权流程更加便捷，用户只需在弹出的对话框中同意即可。而 <em>kernelSU</em> 的流程相对繁琐，要求用户手动在面板中进行设置。</p>',17)]))}const l=o(s,[["render",i],["__file","7.root_manager.html.vue"]]),p=JSON.parse('{"path":"/series/root/7.root_manager.html","title":"root 管理器","lang":"en-US","frontmatter":{"title":"root 管理器","date":"2024/10/07","tags":["android"]},"headers":[{"level":2,"title":"root管理器能干啥？","slug":"root管理器能干啥","link":"#root管理器能干啥","children":[]},{"level":2,"title":"最流行的root管理器","slug":"最流行的root管理器","link":"#最流行的root管理器","children":[]},{"level":2,"title":"magisk","slug":"magisk","link":"#magisk","children":[]},{"level":2,"title":"其他 root管理器","slug":"其他-root管理器","link":"#其他-root管理器","children":[{"level":3,"title":"Kitsune Mask / magisk Δ","slug":"kitsune-mask-magisk-δ","link":"#kitsune-mask-magisk-δ","children":[]},{"level":3,"title":"kernelSU","slug":"kernelsu","link":"#kernelsu","children":[]}]}],"git":{},"filePathRelative":"series/root/7.root_manager.md"}');export{l as comp,p as data};
